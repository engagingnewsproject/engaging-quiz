//fonts
$fontBody : Arial,monospace, helvetica, arial, sans-serif;
$fontTitle : Arial,monospace, helvetica, arial, sans-serif;

// // // colors
$font : #1d1c25;
$background: #FAF9FB;
$title : #5D5E5F;

// Blues
$blue: #00A9B7;
$dark_blue: #333F48;
$light_blue: lighten($blue, 100);

// Grays
$light_gray: #FAF9FB;
$really_light_gray: lighten($light_gray, 1);
$gray: darken($light_gray, 2);
$dark_gray: darken($gray, 5);
$darker_gray: darken($dark_gray, 20);
$darkest_gray: darken($dark_gray, 50);

// Other colors
$khaki: #CCA562;
$green: #60AAAD;
$dark_green: darken($green, 8);
$red: #bf5700;
$dark_red: darken($red, 8);
$fade_red: #C1893E;

// Elements
$link: #bf5700;
$link_hover: darken($link, 8);
// animation
$fastInEaseOut: cubic-bezier(0.000, 0, .3, 1);


$breakpoints: (
  "small"  : 400px,
  "medium" : 700px,
  "large"  : 1000px
);

// -----------------------------------------------------------------------------
// Core
// -----------------------------------------------------------------------------

// Caching current breakpoint
// Not meant to be manually edited
$default-breakpoint: root;
$current-breakpoint: $default-breakpoint;

// The usual breakpoint mixin
// Except it updates the $current-breakpoint variable
// 1. If breakpoint name exists in map
// 2. Update $current-breakpoint
// 3. Open a media query
// 4. Let the user dump content
// 5. Then reset $current-breakpoint
// 6. If breakpoint name doesn't exist in map, warn the user
@mixin breakpoint($breakpoint) {
  $value: map-get($breakpoints, $breakpoint);

  @if $value != null {                                    // 1
    $current-breakpoint: $breakpoint         !global;     // 2
    @media (min-width: $value) { @content; }              // 3
    $current-breakpoint: $default-breakpoint !global;     // 5
  }

  @else {
    @warn "Invalid breakpoint `#{$breakpoint}`.";         // 6
  }
}

// for only targeting a specific device
// NOTE: DOESN'T SUPPORT THE @include placeholders!!!
@mixin media($query) {
    @if $query == max-small {
        $media_query: "max-width: #{map-get($breakpoints, "small")}";
    } @else if $query == only-medium {
        $media_query: "min-width: #{map-get($breakpoints, "medium")}) and (max-width: #{(map-get($breakpoints, "large") - 1px)}";
    } @else if $query == max-medium {
        $media_query: "max-width: #{(map-get($breakpoints, "medium") - 1px)}";
    } @else if $query == max-large {
        $media_query: "max-width: #{(map-get($breakpoints, "large") - 1px)}";
    } @else {
        // just use the number provided as a max width
        $media_query: "max-width: #{$query}";
    }

    @if variable-exists(media_query) {
        @media ($media_query) {
            @content;
        }
    }

}
